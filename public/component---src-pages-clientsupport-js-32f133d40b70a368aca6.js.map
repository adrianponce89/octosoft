{"version":3,"sources":["webpack:///./src/components/PrimarySelect.js","webpack:///./src/pages/clientsupport.js","webpack:///./src/assets/Trama.png","webpack:///./src/components/Container.js"],"names":["useStyles","makeStyles","theme","input","fontFamily","borderRadius","borderBottom","paddingTop","paddingLeft","paddingBottom","transform","display","PrimarySelect","className","id","label","children","otherProps","classes","FormControl","variant","size","fullWidth","InputLabel","htmlFor","Select","root","formContainer","alignItems","justifyContent","gridContainer","flex","margin","gridItem","padding","title","fontWeight","fontSize","lineHeight","color","props","clientSupportBanner","width","division","borderWidth","borderStyle","borderColor","marginTop","marginBottom","imgContainer","smartphoneImg","height","backgroundImage","image","file","url","backgroundPosition","backgroundRepeat","backgroundSize","buttonContainer","button","background","darkenColor","ClientSupport","useState","clientName","setClientName","clientID","setClientID","problem","setProblem","email","setEmail","phone","setPhone","content","setContent","services","get","find","node","type","Container","BackgroundImage","innerBackground","name","onSubmit","event","preventDefault","submitForm","then","alert","catch","error","data-netlify","value","Grid","container","md","spacing","item","xs","sm","PrimaryInput","onChange","target","required","MenuItem","map","multiline","rows","Button","Hidden","smDown","module","exports","outsideBox","minHeight","partial","opacity","top","left","bottom","right","position","backgroundColor","palette","default","zIndex","innerBox","maxWidth","common","white","innerPadding"],"mappings":"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","file":"component---src-pages-clientsupport-js-32f133d40b70a368aca6.js","sourcesContent":["import React from 'react';\nimport { FormControl, InputLabel, Select } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    fontFamily: 'Montserrat',\n    '& div': {\n      borderRadius: 0,\n    },\n    '& div::before': {\n      borderRadius: 0,\n      borderBottom: 'none',\n    },\n    '& input': {\n      fontFamily: 'Montserrat',\n      paddingTop: 24,\n      paddingLeft: 12,\n      paddingBottom: 6,\n    },\n    '& label': {\n      fontFamily: 'Montserrat',\n      transform: 'translate(12px, 18px) scale(1)',\n    },\n    '& label span': {\n      display: 'none',\n    },\n    '& label.MuiInputLabel-shrink': {\n      transform: 'translate(12px, 6px) scale(0.75)',\n    },\n  },\n}));\n\nconst PrimarySelect = ({\n  className,\n  id,\n  label,\n  children,\n  ...otherProps\n}) => {\n  const classes = useStyles();\n  return (\n    <FormControl\n      variant=\"filled\"\n      size=\"small\"\n      className={`${classes.input} ${className}`}\n      fullWidth\n    >\n      <InputLabel htmlFor={id}>{label}</InputLabel>\n      <Select label={label} id={id} {...otherProps}>\n        {children}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default PrimarySelect;\n","import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport get from 'lodash/get';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Container from '../components/Container';\nimport BackgroundImage from '../assets/Trama.png';\nimport { submitForm, darkenColor } from '../utils';\nimport PrimaryInput from '../components/PrimaryInput';\nimport PrimarySelect from '../components/PrimarySelect';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  formContainer: {\n    display: 'flex',\n    alignItems: 'stretch',\n    justifyContent: 'center',\n  },\n  gridContainer: {\n    flex: 1,\n    margin: 40,\n  },\n  gridItem: {\n    padding: '0 5px',\n  },\n  title: {\n    margin: '10px 10px 30px 0',\n    fontFamily: 'Montserrat',\n    fontWeight: 900,\n    fontSize: 48,\n    lineHeight: 1,\n    color: (props) => props.clientSupportBanner.color,\n    width: '100%',\n  },\n  division: {\n    width: 0,\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderColor: (props) => props.clientSupportBanner.color,\n    marginTop: 60,\n    marginBottom: 60,\n  },\n  imgContainer: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  smartphoneImg: {\n    width: '100%',\n    height: '100%',\n    backgroundImage: (props) =>\n      `url(${props.clientSupportBanner.image.file.url})`,\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n  },\n  buttonContainer: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  button: {\n    margin: 5,\n    width: 200,\n    borderRadius: 0,\n    background: (props) => props.clientSupportBanner.color,\n    '&:hover': {\n      background: (props) =>\n        darkenColor(props.clientSupportBanner.color, 0.8),\n    },\n  },\n}));\n\nconst ClientSupport = (props) => {\n  const [clientName, setClientName] = useState('');\n  const [clientID, setClientID] = useState('');\n  const [problem, setProblem] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [content, setContent] = useState('');\n\n  const services = get(props, 'data.allContentfulService.edges');\n\n  const banners = get(props, 'data.allContentfulBanners.edges');\n  const clientSupportBanner = banners.find(\n    ({ node }) => node.type === 'ClientSupport',\n  ).node;\n\n  const classes = useStyles({ clientSupportBanner });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    submitForm('clientsupport', {\n      clientName,\n      clientID,\n      problem,\n      email,\n      phone,\n      content,\n    })\n      .then(() =>\n        alert(\n          'Your message was received. We will contact you shortly.',\n        ),\n      )\n      .catch((error) => alert(error));\n\n    setClientName('');\n    setClientID('');\n    setProblem('');\n    setEmail('');\n    setPhone('');\n    setContent('');\n  };\n\n  return (\n    <Container\n      className={classes.root}\n      background={`url(${BackgroundImage})`}\n      innerBackground={'none'}\n    >\n      <form\n        name=\"clientsupport\"\n        onSubmit={handleSubmit}\n        data-netlify=\"true\"\n      >\n        <input type=\"hidden\" name=\"form-name\" value=\"clientsupport\" />\n        <div className={classes.formContainer}>\n          <Grid\n            className={classes.gridContainer}\n            container\n            md={6}\n            spacing={3}\n          >\n            <h1 className={classes.title}>\n              {clientSupportBanner.title}\n            </h1>\n            <Grid className={classes.gridItem} item xs={12} sm={6}>\n              <PrimaryInput\n                id=\"NameInput\"\n                value={clientName}\n                name=\"clientName\"\n                onChange={({ target }) => setClientName(target.value)}\n                label=\"Client Name\"\n                required\n              />\n            </Grid>\n            <Grid className={classes.gridItem} item xs={12} sm={6}>\n              <PrimaryInput\n                id=\"IDInput\"\n                value={clientID}\n                name=\"clientID\"\n                onChange={({ target }) => setClientID(target.value)}\n                label=\"Client ID\"\n                required\n              />\n            </Grid>\n            <Grid className={classes.gridItem} item xs={12}>\n              <PrimarySelect\n                label=\"Name your problem\"\n                id=\"ServiceInput\"\n                value={problem}\n                name=\"problem\"\n                onChange={({ target }) => setProblem(target.value)}\n                required\n              >\n                <MenuItem value=\"General\">General</MenuItem>\n                {services.map(({ node }) => (\n                  <MenuItem value={node.title}>{node.title}</MenuItem>\n                ))}\n              </PrimarySelect>\n            </Grid>\n            <Grid className={classes.gridItem} item xs={12} sm={6}>\n              <PrimaryInput\n                id=\"EmailInput\"\n                value={email}\n                name=\"email\"\n                onChange={({ target }) => setEmail(target.value)}\n                label=\"Your Email\"\n                required\n              />\n            </Grid>\n            <Grid className={classes.gridItem} item xs={12} sm={6}>\n              <PrimaryInput\n                id=\"PhoneInput\"\n                value={phone}\n                name=\"phone\"\n                onChange={({ target }) => setPhone(target.value)}\n                label=\"Your Phone Number\"\n                required\n              />\n            </Grid>\n            <Grid className={classes.gridItem} item xs={12}>\n              <PrimaryInput\n                id=\"ContentInput\"\n                value={content}\n                name=\"content\"\n                onChange={({ target }) => setContent(target.value)}\n                multiline\n                rows={12}\n                size=\"small\"\n              />\n            </Grid>\n            <div className={classes.buttonContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                className={classes.button}\n              >\n                Send\n              </Button>\n            </div>\n          </Grid>\n          <Hidden smDown>\n            <div className={classes.division} />\n            <Grid item className={classes.imgContainer} md={5}>\n              <div className={classes.smartphoneImg} />\n            </Grid>\n          </Hidden>\n        </div>\n      </form>\n    </Container>\n  );\n};\n\nexport default ClientSupport;\n\nexport const pageQuery = graphql`\n  query ClientSupportQuery {\n    allContentfulService {\n      edges {\n        node {\n          title\n        }\n      }\n    }\n    allContentfulBanners {\n      edges {\n        node {\n          title\n          color\n          image {\n            file {\n              url\n            }\n          }\n          type\n        }\n      }\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/Trama-8c075bb8c2ce45a13386026859cd7a81.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Container = (props) => {\n  const classes = useStyles(props);\n  return (\n    <div className={classes.outsideBox}>\n      <div className={classes.background} />\n      <div className={`${classes.innerBox} ${props.className}`}>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  outsideBox: (props) => ({\n    width: '100%',\n    height: '100%',\n    minHeight: !!props.partial ? '50vh' : '100vh',\n    margin: 0,\n    padding: 0,\n    display: 'flex',\n    justifyContent: 'center',\n  }),\n  background: (props) => ({\n    width: '100%',\n    height: '100%',\n    minHeight: !!props.partial ? '50vh' : '100vh',\n    opacity: props.opacity || 0.2,\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    position: 'absolute',\n    background: props.background || 'none',\n    backgroundColor:\n      props.backgroundColor || theme.palette.background.default,\n    backgroundPosition: 'initial',\n    backgroundRepeat: 'repeat',\n    backgroundSize: '100vw',\n    zIndex: '-1',\n  }),\n  innerBox: (props) => ({\n    width: '100%',\n    //Los max width bloquean el ancho de la pantalla, hay que reverlo\n    maxWidth: '80%',\n    '@media (min-width: 1362px)': {\n      maxWidth: '95%'\n    },\n    background: props.innerBackground || theme.palette.common.white,\n    padding: props.innerPadding || '80px 0 0 0',\n  }),\n}));\n\nexport default Container;\n"],"sourceRoot":""}